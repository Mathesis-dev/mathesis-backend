generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserCategoryEnum {
  TEACHER
  STUDENT
}

model User {
  id        Int              @id @default(autoincrement())
  name      String
  email     String           @unique
  password  String
  category  UserCategoryEnum
  createdAt DateTime         @default(now()) @map("created_at")
  updatedAt DateTime?        @updatedAt @map("updated_at")
  deletedAt DateTime?        @map("deleted_at")
  // Teacher   Teacher?

  @@map("users")
}

// enum WeekdayEnum {
//   SUNDAY
//   MONDAY
//   TUESDAY
//   WEDNESDAY
//   THURSDAY
//   FRIDAY
//   SATURDAY
// }

// enum SubjectEnum {
//   ARTS
//   BIOLOGY
//   SCIENCE
//   PHYSICAL_EDUCATION
//   PHYSICS
//   GEOGRAPHY
//   HISTORY
//   MATH
//   PORTUGUESE
//   CHEMISTRY
// }

// model TeachingSchedules {
//   id        Int         @id @default(autoincrement())
//   weekDay   WeekdayEnum @map("week_day")
//   from      String
//   to        String
//   teacherId Int         @map("teacher_id")
//   Teachers  Teacher     @relation(fields: [teacherId], references: [id])
//   createdAt DateTime    @default(now()) @map("created_at")
//   updatedAt DateTime?   @updatedAt @map("updated_at")
//   deletedAt DateTime?   @map("deleted_at")

//   @@map("teaching_schedules")
// }

// model Teacher {
//   id        Int                 @id @default(autoincrement())
//   phone     String
//   biography String
//   subject   SubjectEnum
//   cost      Float
//   schedules TeachingSchedules[]
//   userId    Int                 @unique @map("user_id")
//   user      User                @relation(fields: [userId], references: [id])
//   createdAt DateTime            @default(now()) @map("created_at")
//   updatedAt DateTime?           @updatedAt @map("updated_at")
//   deletedAt DateTime?           @map("deleted_at")

//   @@map("teachers")
// }
