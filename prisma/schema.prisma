generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserCategoryEnum {
  TEACHER
  STUDENT
}

model User {
  id        Int              @id @default(autoincrement())
  name      String
  email     String           @unique
  password  String
  category  UserCategoryEnum
  createdAt DateTime         @default(now()) @map("created_at")
  updatedAt DateTime?        @updatedAt @map("updated_at")
  deletedAt DateTime?        @map("deleted_at")
  // Teachers   Teachers?

  @@map("users")
}

// enum WeekdayEnum {
//   SUNDAY
//   MONDAY
//   TUESDAY
//   WEDNESDAY
//   THURSDAY
//   FRIDAY
//   SATURDAY
// }

// enum SubjectEnum {
//   ARTS
//   BIOLOGY
//   SCIENCE
//   PHYSICAL_EDUCATION
//   PHYSICS
//   GEOGRAPHY
//   HISTORY
//   MATH
//   PORTUGUESE
//   CHEMISTRY
// }

// model TeachingSchedules {
//   id         Int          @id @default(autoincrement())
//   week_day   WeekdaysEnum
//   from       String
//   to         String
//   teacher_id Int
//   Teachers   Teachers     @relation(fields: [teacher_id], references: [id])
//   created_at DateTime     @default(now())
//   updated_at DateTime?    @updatedAt
//   deleted_at DateTime?

//   @@map("teaching_schedules")
// }

// model Teacher {
//   id         Int                 @id @default(autoincrement())
//   phone      String
//   biography  String
//   subject    SubjectsEnum
//   cost       Float
//   schedules  TeachingSchedules[]
//   userId     Int                 @unique @map("user_id")
//   user       Users               @relation(fields: [userId], references: [id])
//   created_at DateTime            @default(now())
//   updated_at DateTime?           @updatedAt
//   deleted_at DateTime?

//   @@map("teachers")
// }
